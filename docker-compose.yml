version: "3.8"

services:
  # Serviço da aplicação NestJS
  app:
    build: 
      context: .
      dockerfile: dockerfile
    container_name: nest_app
    restart: always
    depends_on:
      - postgres
      - rabbitmq
    environment:
      DATABASE_URL: postgresql://postgres:prisma@postgres_db:5432/postgres?schema=public
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: rabbitmq
      RABBITMQ_PASSWORD: rabbitmq
    ports:
      - '3000:3000'
    networks:
      - backend

  postgres:
    image: postgres:15-alpine
    hostname: postgres_db
    container_name: postgres_db_
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=prisma
    ports:
      - '5432:5432'
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prisma -d postgres"]
      interval: 5s
      timeout: 2s
      retries: 20
    volumes:
      - postgres_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq_server
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
    ports:
      - '5672:5672' # Porta para conexões do RabbitMQ
      - '15672:15672' # Interface de gerenciamento
    networks:
      - backend

networks:
  backend:

volumes:
  postgres_data: